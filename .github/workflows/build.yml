# build.yml
on:
  push:
    branches: [ master ]

name: Deploy Staging ECR

env:
  AWS_DEFAULT_REGION: us-east-2

jobs:
  build-and-push:
    name: Deploy Staging
    runs-on: ubuntu-latest
    steps:
      # configure aws credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # checkout project
      - name: Checkout
        uses: actions/checkout@master

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@4137be6a8bf7d7133955359dbd952c0ca73b1021
        with:
          arguments: clean build test
      
      # build image
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: staging
          IMAGE_TAG: ${{ github.event.repository.name }}-${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f platform/docker/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Replace image in config
        uses: datamonsters/replace-action@master
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: staging
          IMAGE_TAG: ${{ github.event.repository.name }}-${{ github.sha }}
        with:
          files:  platform/kubernetes/deploymentStage.yaml
          replacements: '$IMAGE=${{ steps.login-ecr.outputs.registry }}/staging:${{ github.event.repository.name }}-${{ github.sha }}'

      - name: deploy to cluster
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_STAGING_CONFIG_DATA }}
        with:
          args: apply -f platform/kubernetes/deploymentStage.yaml

#      - name: verify deployment
#        uses: kodermax/kubectl-aws-eks@master
#        env:
#          KUBE_CONFIG_DATA: ${{ secrets.KUBE_STAGING_CONFIG_DATA }}
#        with:
#          args: rollout status deployment/{{ github.event.repository.name }}
