version: '3'

volumes:
  user-data:

services:
  db_oauth_service:
    image: postgres:13-alpine
    restart: always
    container_name: pg-oauth
    environment:
      POSTGRES_DB: oauth_db
      POSTGRES_USER: oauth_user
      POSTGRES_PASSWORD: oauth_pwd
    ports:
      - "5432:5432"

  zoo-kamino:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo-kamino:2888:3888
    volumes:
      - /tmp/kafka/zoo-kamino/data:/data
      - /tmp/kafka/zoo-kamino/datalog:/datalog

  kafka-kamino:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-kamino:19092,LISTENER_DOCKER_EXTERNAL://${pi:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo-kamino:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_TOPICS: "register-membership-command:1:1"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zoo-kamino
    links:
      - zoo-kamino

  kafka-schema-registry-kamino:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-kamino:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - zoo-kamino
      - kafka-kamino