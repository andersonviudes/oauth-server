apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: native-ms
  labels:
    app.kubernetes.io/name: load-balancer-{{APP-NAME}}
  name: {{APP-NAME}}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: load-balancer-{{APP-NAME}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: load-balancer-{{APP-NAME}}
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - image: {{IMAGE_URL}}
          name: {{APP-NAME}}
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: 256m
              memory: 512Mi
            requests:
              cpu: 64m
              memory: 256Mi
          env:
            - name: JAVA_OPTS
              value: "-XX:+UseContainerSupport -XX:+UseStringDeduplication -XX:G1ReservePercent=10 -XX:+UseG1GC -XX:ParallelGCThreads=3 -XX:ConcGCThreads=3 -XX:InitiatingHeapOccupancyPercent=60 -XX:MaxGCPauseMillis=100 -XX:MaxDirectMemorySize=10M -XX:MaxMetaspaceSize=150096K -XX:ReservedCodeCacheSize=240M"
            - name: MYSQL_HOST
              value: "native-db.db.nativetech.local"
            - name: MESSENGER_HOST
              value: "messenger"
          readinessProbe:
            failureThreshold: 390
            httpGet:
              path: /health/readiness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 80
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          livenessProbe:
            failureThreshold: 390
            httpGet:
              path: /health/liveness
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 80
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
